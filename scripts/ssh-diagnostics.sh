#!/bin/bash

# SSH Connection Diagnostic Script
# Run this to debug SSH connectivity issues

echo "üîç SSH Connection Diagnostics"
echo "============================="

# Check if secrets are properly set
echo "üìã Checking GitHub Secrets..."
if [ -z "$HOST" ]; then
    echo "‚ùå HOST secret not set"
else
    echo "‚úÖ HOST: $HOST"
fi

if [ -z "$USERNAME" ]; then
    echo "‚ùå USERNAME secret not set"
else
    echo "‚úÖ USERNAME: $USERNAME"
fi

if [ -z "$SSH_KEY" ]; then
    echo "‚ùå SSH_KEY secret not set"
else
    echo "‚úÖ SSH_KEY is set (length: ${#SSH_KEY} chars)"
fi

# Test basic connectivity
echo ""
echo "üåê Testing network connectivity..."
if command -v nc &> /dev/null; then
    PORT=${PORT:-22}
    echo "Testing connection to $HOST:$PORT..."
    
    if timeout 10 nc -z "$HOST" "$PORT"; then
        echo "‚úÖ Port $PORT is open on $HOST"
    else
        echo "‚ùå Cannot connect to $HOST:$PORT"
        echo "üí° Possible issues:"
        echo "   - Server is down"
        echo "   - Firewall blocking connection"
        echo "   - Wrong port number"
        echo "   - Network connectivity issues"
    fi
else
    echo "‚ö†Ô∏è netcat not available for port testing"
fi

# SSH key format check
echo ""
echo "üîë SSH Key diagnostics..."
if [ ! -z "$SSH_KEY" ]; then
    echo "$SSH_KEY" | head -1 | grep -q "BEGIN" && echo "‚úÖ SSH key appears to have correct header" || echo "‚ùå SSH key format might be incorrect"
    echo "$SSH_KEY" | tail -1 | grep -q "END" && echo "‚úÖ SSH key appears to have correct footer" || echo "‚ùå SSH key format might be incorrect"
fi

echo ""
echo "üöÄ Connection test with verbose output..."
