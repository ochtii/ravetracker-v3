name: SSH Troubleshoot - Fix Authentication

on:
  workflow_dispatch:

jobs:
  ssh-diagnosis:
    runs-on: ubuntu-latest
    
    steps:
    - name: SSH Connection Diagnosis
      run: |
        echo "🔍 SSH Authentication Diagnosis"
        echo "==============================="
        echo "🎯 Target: ${{ secrets.HOST }}"
        echo "👤 User: ${{ secrets.USERNAME }}"
        echo "🔑 Key Type: Ed25519"
        echo ""
        
        # Test basic connectivity
        echo "📡 Testing basic connectivity..."
        if timeout 10 bash -c "</dev/tcp/${{ secrets.HOST }}/22"; then
          echo "✅ Port 22 is reachable"
        else
          echo "❌ Port 22 is not reachable"
          exit 1
        fi
        
    - name: Test SSH Key Format
      run: |
        echo "🔑 Testing SSH key format..."
        
        # Create temporary key file
        echo "${{ secrets.SSH_KEY }}" > temp_key
        chmod 600 temp_key
        
        # Check key format
        if ssh-keygen -l -f temp_key; then
          echo "✅ SSH key format is valid"
        else
          echo "❌ SSH key format is invalid"
          exit 1
        fi
        
        # Clean up
        rm temp_key
        
    - name: Test SSH Connection
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT || '22' }}
        timeout: 30s
        command_timeout: 15s
        script: |
          echo "🎉 SSH connection successful!"
          echo "=============================="
          echo "🖥️ Hostname: $(hostname)"
          echo "👤 User: $(whoami)"
          echo "📍 Working directory: $(pwd)"
          echo "🆔 User ID: $(id)"
          echo ""
          echo "📁 Home directory contents:"
          ls -la ~/
          echo ""
          echo "🔑 SSH authorized_keys:"
          if [ -f ~/.ssh/authorized_keys ]; then
            wc -l ~/.ssh/authorized_keys
            echo "Keys in file:"
            cat ~/.ssh/authorized_keys | cut -d' ' -f1-2
          else
            echo "No authorized_keys file found"
          fi

  fix-ssh-if-needed:
    runs-on: ubuntu-latest
    needs: [ssh-diagnosis]
    if: failure()
    
    steps:
    - name: SSH Fix Instructions
      run: |
        echo "🚨 SSH Connection Failed - Manual Fix Required"
        echo "=============================================="
        echo ""
        echo "The SSH connection is failing. Here's how to fix it:"
        echo ""
        echo "1. 🔑 Add the public key to the server:"
        echo "   ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAID6agAsv7vpXLnpWeR1Ipc2BpYirRUisP5SSG2+ESUxf deploy@ravetracker"
        echo ""
        echo "2. 📝 Connect to your server manually and run:"
        echo '   ```bash'
        echo '   # Connect as root or existing user'
        echo '   ssh root@${{ secrets.HOST }}'
        echo '   '
        echo '   # Create deploy user if not exists'
        echo '   useradd -m -s /bin/bash deploy'
        echo '   usermod -aG sudo deploy'
        echo '   '
        echo '   # Setup SSH for deploy user'
        echo '   mkdir -p /home/deploy/.ssh'
        echo '   echo "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAID6agAsv7vpXLnpWeR1Ipc2BpYirRUisP5SSG2+ESUxf deploy@ravetracker" > /home/deploy/.ssh/authorized_keys'
        echo '   chmod 700 /home/deploy/.ssh'
        echo '   chmod 600 /home/deploy/.ssh/authorized_keys'
        echo '   chown -R deploy:deploy /home/deploy/.ssh'
        echo '   ```'
        echo ""
        echo "3. 🧪 Test the connection:"
        echo "   ssh deploy@${{ secrets.HOST }}"
        echo ""
        echo "4. 🔒 Verify GitHub Secrets are set correctly:"
        echo "   - HOST: ${{ secrets.HOST }}"
        echo "   - USERNAME: deploy"
        echo "   - SSH_KEY: (private key content)"
        echo "   - PORT: 22 (or custom port)"

  test-manual-connection:
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Manual SSH Test Commands
      run: |
        echo "🛠️ Manual SSH Test Commands"
        echo "==========================="
        echo ""
        echo "Run these commands locally to test:"
        echo ""
        echo "1. 📝 Create a test script:"
        echo 'cat > test_ssh.sh << "EOF"'
        echo '#!/bin/bash'
        echo 'echo "Testing SSH connection to ${{ secrets.HOST }}..."'
        echo 'ssh -v -i ~/.ssh/ravetracker_deploy -o ConnectTimeout=10 -o BatchMode=yes deploy@${{ secrets.HOST }} "echo \"SSH Success: \$(whoami)@\$(hostname)\""'
        echo 'EOF'
        echo ""
        echo "2. 🚀 Run the test:"
        echo "   chmod +x test_ssh.sh"
        echo "   ./test_ssh.sh"
        echo ""
        echo "3. 🔍 If connection fails, check:"
        echo "   - Is the server reachable?"
        echo "   - Is the deploy user created?"
        echo "   - Is the public key in authorized_keys?"
        echo "   - Are the file permissions correct?"
        echo ""
        echo "4. 🔧 Server setup commands (run as root):"
        echo 'cat > setup_deploy_user.sh << "EOF"'
        echo '#!/bin/bash'
        echo 'echo "Setting up deploy user..."'
        echo '# Create user'
        echo 'useradd -m -s /bin/bash deploy || echo "User exists"'
        echo 'usermod -aG sudo deploy'
        echo ''
        echo '# Setup SSH'
        echo 'mkdir -p /home/deploy/.ssh'
        echo 'cat > /home/deploy/.ssh/authorized_keys << "EOK"'
        echo 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAID6agAsv7vpXLnpWeR1Ipc2BpYirRUisP5SSG2+ESUxf deploy@ravetracker'
        echo 'EOK'
        echo ''
        echo '# Fix permissions'
        echo 'chmod 700 /home/deploy/.ssh'
        echo 'chmod 600 /home/deploy/.ssh/authorized_keys'
        echo 'chown -R deploy:deploy /home/deploy/.ssh'
        echo ''
        echo '# Test'
        echo 'echo "Deploy user setup complete!"'
        echo 'echo "Test with: ssh deploy@$(hostname -I | awk '\''{print $1}'\'')"'
        echo 'EOF'
