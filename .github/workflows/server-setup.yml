name: Server Setup & Fix Permissions

on:
  workflow_dispatch:

jobs:
  setup-server:
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup RaveTracker Server Environment
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT || '22' }}
        timeout: 120s
        command_timeout: 60s
        script: |
          echo "üîß RaveTracker v3.0 - Server Environment Setup"
          echo "=============================================="
          echo "üë§ Current user: $(whoami)"
          echo "üè† Server: $(hostname)"
          echo "üìç Working directory: $(pwd)"
          echo ""
          
          # Check sudo access
          echo "üîê Checking sudo access..."
          if sudo -n true 2>/dev/null; then
            echo "‚úÖ Passwordless sudo available"
            SUDO_AVAILABLE=true
          elif sudo -l &>/dev/null; then
            echo "‚ö†Ô∏è Sudo available but may require password"
            SUDO_AVAILABLE=true
          else
            echo "‚ùå No sudo access available"
            SUDO_AVAILABLE=false
          fi
          
          echo ""
          echo "üìÅ Setting up directory structure..."
          
          if [ "$SUDO_AVAILABLE" = true ]; then
            # Method 1: Using sudo (preferred)
            echo "üîß Using sudo method..."
            
            # Create main directory with sudo
            if [ ! -d "/var/www/ravetracker-v3" ]; then
              echo "üìÇ Creating /var/www/ravetracker-v3..."
              sudo mkdir -p /var/www/ravetracker-v3
              echo "‚úÖ Main directory created"
            else
              echo "‚úÖ /var/www/ravetracker-v3 already exists"
            fi
            
            # Set ownership to current user
            echo "üîê Setting ownership to $USER..."
            sudo chown -R $USER:$USER /var/www/ravetracker-v3
            echo "‚úÖ Ownership transferred to $USER"
            
            # Set correct permissions
            echo "üîí Setting permissions..."
            sudo chmod -R 755 /var/www/ravetracker-v3
            echo "‚úÖ Permissions set to 755"
            
            # Create project structure
            echo "üìÇ Creating project subdirectories..."
            mkdir -p /var/www/ravetracker-v3/{releases,shared/{logs,uploads,node_modules},temp_build}
            echo "‚úÖ Project structure created"
            
            PROJECT_DIR="/var/www/ravetracker-v3"
            
          else
            # Method 2: Using home directory (fallback)
            echo "üè† Using home directory method (fallback)..."
            
            # Create in home directory
            mkdir -p ~/ravetracker-v3/{releases,shared/{logs,uploads,node_modules},temp_build}
            echo "‚úÖ Project structure created in home directory"
            
            PROJECT_DIR="$HOME/ravetracker-v3"
            
            # Try to create symlink if possible
            if [ -w "/var/www" ] || sudo test -w "/var/www" 2>/dev/null; then
              sudo ln -sf ~/ravetracker-v3 /var/www/ravetracker-v3
              echo "‚úÖ Symbolic link created: /var/www/ravetracker-v3 -> ~/ravetracker-v3"
            else
              echo "‚ö†Ô∏è Could not create symlink to /var/www/"
            fi
          fi
          
          echo ""
          echo "üìä Final directory structure:"
          echo "============================="
          ls -la "$PROJECT_DIR"
          
          echo ""
          echo "üîç Ownership and permissions:"
          echo "============================="
          ls -ld "$PROJECT_DIR"
          
          if [ -d "$PROJECT_DIR/shared" ]; then
            ls -la "$PROJECT_DIR/shared"
          fi
          
          echo ""
          echo "üíæ Disk space check:"
          echo "==================="
          df -h "$PROJECT_DIR"
          
          echo ""
          echo "üß™ Write test:"
          echo "============="
          TEST_FILE="$PROJECT_DIR/write_test.txt"
          if echo "Write test successful" > "$TEST_FILE" 2>/dev/null; then
            echo "‚úÖ Write permissions confirmed"
            rm "$TEST_FILE"
          else
            echo "‚ùå Write test failed"
          fi
          
          echo ""
          echo "üéâ Server setup completed!"
          echo "=========================="
          echo "üìÅ Project directory: $PROJECT_DIR"
          echo "üë§ Owner: $USER"
          echo "üîí Permissions: 755"
          echo "üìä Subdirectories: releases, shared (logs, uploads, node_modules), temp_build"
          
          # Create a setup completion marker
          echo "$(date): Server setup completed by $USER on $(hostname)" > "$PROJECT_DIR/setup_completed.log"
          echo "‚úÖ Setup completion logged"

  verify-setup:
    needs: setup-server
    runs-on: ubuntu-latest
    
    steps:
    - name: Verify Server Setup
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT || '22' }}
        timeout: 60s
        command_timeout: 30s
        script: |
          echo "üîç RaveTracker v3.0 - Setup Verification"
          echo "========================================"
          
          # Find project directory
          if [ -d "/var/www/ravetracker-v3" ]; then
            PROJECT_DIR="/var/www/ravetracker-v3"
          elif [ -d "$HOME/ravetracker-v3" ]; then
            PROJECT_DIR="$HOME/ravetracker-v3"
          else
            echo "‚ùå Project directory not found!"
            exit 1
          fi
          
          echo "üìÅ Project directory: $PROJECT_DIR"
          
          # Check required directories
          REQUIRED_DIRS=(
            "$PROJECT_DIR"
            "$PROJECT_DIR/releases"
            "$PROJECT_DIR/shared"
            "$PROJECT_DIR/shared/logs"
            "$PROJECT_DIR/shared/uploads"
            "$PROJECT_DIR/shared/node_modules"
            "$PROJECT_DIR/temp_build"
          )
          
          echo ""
          echo "‚úÖ Directory verification:"
          for dir in "${REQUIRED_DIRS[@]}"; do
            if [ -d "$dir" ]; then
              echo "  ‚úÖ $dir"
            else
              echo "  ‚ùå $dir (missing)"
            fi
          done
          
          # Check write permissions
          echo ""
          echo "‚úÖ Permission verification:"
          if [ -w "$PROJECT_DIR" ]; then
            echo "  ‚úÖ Write permission to main directory"
          else
            echo "  ‚ùå No write permission to main directory"
          fi
          
          # Check setup log
          if [ -f "$PROJECT_DIR/setup_completed.log" ]; then
            echo ""
            echo "üìã Setup log:"
            cat "$PROJECT_DIR/setup_completed.log"
          fi
          
          echo ""
          echo "üéØ Ready for deployment!"
          echo "Use 'SSH Success - Deploy RaveTracker' workflow to deploy the application."
