name: Emergency NGINX Fix

on:
  workflow_dispatch:

jobs:
  fix-nginx-config:
    runs-on: ubuntu-latest
    
    steps:
    - name: Fix NGINX Configuration Error
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT || '22' }}
        timeout: 120s
        command_timeout: 60s
        script: |
          echo "🔧 Emergency NGINX Configuration Fix"
          echo "===================================="
          
          # Check current user and sudo status
          echo "👤 Current user: $(whoami)"
          echo "🆔 User ID: $(id)"
          
          # First, let's see what's in the current nginx config
          echo ""
          echo "🔍 Checking current NGINX configuration..."
          if [ -f "/etc/nginx/sites-enabled/ravetracker-v3" ]; then
            echo "📄 Current config exists, checking line 65 area..."
            echo "Lines 60-70:"
            sed -n '60,70p' /etc/nginx/sites-enabled/ravetracker-v3 2>/dev/null || echo "Cannot read config file"
          else
            echo "❌ No ravetracker-v3 config found"
          fi
          
          # Create a corrected NGINX configuration
          echo ""
          echo "📝 Creating corrected NGINX configuration..."
          
          # Create the config in /tmp first
          cat > /tmp/ravetracker-v3.conf << 'EOF'
          server {
              listen 80 default_server;
              listen [::]:80 default_server;
              
              server_name _;
              
              # Logs
              access_log /var/log/nginx/ravetracker-access.log;
              error_log /var/log/nginx/ravetracker-error.log;
              
              # Main application
              location / {
                  # Try to proxy to SvelteKit app first
                  proxy_pass http://127.0.0.1:3000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_cache_bypass $http_upgrade;
                  
                  # Quick timeouts for fallback
                  proxy_connect_timeout 3s;
                  proxy_send_timeout 3s;
                  proxy_read_timeout 3s;
                  
                  # Fallback to static files if proxy fails
                  error_page 502 503 504 = @static;
              }
              
              # Static file fallback
              location @static {
                  root /var/www/ravetracker-v3/temp_build;
                  try_files $uri $uri/ /index.html;
                  
                  # Cache static files - FIXED SYNTAX
                  expires 1y;
                  add_header Cache-Control "public, max-age=31536000";
              }
              
              # Direct static assets
              location /assets/ {
                  alias /var/www/ravetracker-v3/temp_build/assets/;
                  expires 1y;
                  add_header Cache-Control "public, max-age=31536000";
              }
              
              # Health check
              location /health {
                  access_log off;
                  return 200 "RaveTracker v3.0 - Healthy\n";
                  add_header Content-Type text/plain;
              }
              
              # Security headers
              add_header X-Frame-Options "SAMEORIGIN" always;
              add_header X-XSS-Protection "1; mode=block" always;
              add_header X-Content-Type-Options "nosniff" always;
              add_header Referrer-Policy "no-referrer-when-downgrade" always;
              
              # Hide nginx version
              server_tokens off;
              
              # Gzip compression
              gzip on;
              gzip_vary on;
              gzip_min_length 1024;
              gzip_types
                  application/javascript
                  application/json
                  application/xml
                  text/css
                  text/javascript
                  text/xml
                  text/plain
                  text/html;
          }
          EOF
          
          echo "✅ Corrected configuration created in /tmp"
          
          # Test the new configuration syntax
          echo ""
          echo "🧪 Testing new configuration syntax..."
          if nginx -t -c /tmp/ravetracker-v3.conf 2>/dev/null; then
            echo "✅ New configuration syntax is valid"
          else
            echo "⚠️ Testing configuration syntax (some errors expected due to missing main config)"
          fi
          
          # Show what we're going to replace
          echo ""
          echo "📋 Configuration ready to deploy:"
          echo "- Fixed Cache-Control headers"
          echo "- Removed problematic 'must-revalidate' directive"
          echo "- Added proper fallback handling"
          echo "- Improved static file serving"
          
          # Instructions for manual application (since sudo needs password)
          echo ""
          echo "🔧 Manual steps needed (run as user with sudo access):"
          echo "======================================================"
          echo ""
          echo "1. Copy the new configuration:"
          echo "   sudo cp /tmp/ravetracker-v3.conf /etc/nginx/sites-available/ravetracker-v3"
          echo ""
          echo "2. Test the configuration:"
          echo "   sudo nginx -t"
          echo ""
          echo "3. Reload NGINX:"
          echo "   sudo systemctl reload nginx"
          echo ""
          echo "4. Check status:"
          echo "   sudo systemctl status nginx"
          
          # Try to provide more details about the current issue
          echo ""
          echo "🔍 Current issue analysis:"
          echo "========================="
          echo "❌ The error 'invalid value \"must-revalidate\"' indicates a syntax problem"
          echo "✅ Our new config removes this problematic directive"
          echo "✅ Cache-Control headers are now properly formatted"
          echo ""
          echo "📁 Files location:"
          echo "- New config: /tmp/ravetracker-v3.conf"
          echo "- Target: /etc/nginx/sites-available/ravetracker-v3"
          echo "- Enabled: /etc/nginx/sites-enabled/ravetracker-v3"

  create-sudo-fix:
    runs-on: ubuntu-latest
    needs: [fix-nginx-config]
    
    steps:
    - name: Create Sudo Fix Script
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT || '22' }}
        timeout: 60s
        command_timeout: 30s
        script: |
          echo "🔧 Creating sudo fix script..."
          
          # Create a script that can be run with sudo
          cat > /tmp/apply_nginx_fix.sh << 'EOF'
          #!/bin/bash
          
          echo "🔧 Applying NGINX fix..."
          
          # Backup current config
          if [ -f "/etc/nginx/sites-available/ravetracker-v3" ]; then
            cp /etc/nginx/sites-available/ravetracker-v3 /etc/nginx/sites-available/ravetracker-v3.backup.$(date +%Y%m%d_%H%M%S)
            echo "✅ Backup created"
          fi
          
          # Apply new config
          if [ -f "/tmp/ravetracker-v3.conf" ]; then
            cp /tmp/ravetracker-v3.conf /etc/nginx/sites-available/ravetracker-v3
            echo "✅ New configuration applied"
            
            # Test configuration
            if nginx -t; then
              echo "✅ Configuration test passed"
              
              # Reload nginx
              systemctl reload nginx
              echo "✅ NGINX reloaded"
              
              # Check status
              systemctl status nginx --no-pager -l
              
            else
              echo "❌ Configuration test failed, restoring backup"
              if [ -f "/etc/nginx/sites-available/ravetracker-v3.backup."* ]; then
                cp /etc/nginx/sites-available/ravetracker-v3.backup.* /etc/nginx/sites-available/ravetracker-v3
                echo "✅ Backup restored"
              fi
            fi
          else
            echo "❌ New configuration file not found"
          fi
          EOF
          
          chmod +x /tmp/apply_nginx_fix.sh
          
          echo ""
          echo "🎯 NGINX Fix Ready!"
          echo "=================="
          echo "📄 Fixed configuration: /tmp/ravetracker-v3.conf"
          echo "📜 Apply script: /tmp/apply_nginx_fix.sh"
          echo ""
          echo "🚀 To apply the fix, run:"
          echo "sudo bash /tmp/apply_nginx_fix.sh"
          echo ""
          echo "🔍 Or manually:"
          echo "sudo cp /tmp/ravetracker-v3.conf /etc/nginx/sites-available/ravetracker-v3"
          echo "sudo nginx -t"
          echo "sudo systemctl reload nginx"
