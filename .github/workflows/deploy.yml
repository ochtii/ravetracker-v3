name: Smart Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      force_full_deploy:
        description: 'Force full deployment (ignore incremental updates)'
        required: false
        default: 'false'
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Fetch previous commit for comparison
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔍 Check for changes
        id: changes
        run: |
          # Get changed files between current and previous commit
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          # Check if package.json or package-lock.json changed
          DEPS_CHANGED=$(echo "$CHANGED_FILES" | grep -E "package(-lock)?\.json" || true)
          
          # Check if build-relevant files changed
          BUILD_CHANGED=$(echo "$CHANGED_FILES" | grep -E "\.(js|ts|svelte|css|scss|json|html)$|vite\.config|svelte\.config|tailwind\.config" || true)
          
          # Set outputs for conditional steps
          echo "deps_changed=$([[ -n "$DEPS_CHANGED" ]] && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          echo "build_needed=$([[ -n "$BUILD_CHANGED" ]] && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        
      - name: 🏗️ Build application
        if: steps.changes.outputs.build_needed == 'true' || github.event.inputs.force_full_deploy == 'true'
        run: npm run build
        
      - name: 🚀 Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          timeout: 300s
          script: |
            export FORCE_DEPLOY="${{ github.event.inputs.force_full_deploy }}"
            export DEPS_CHANGED="${{ steps.changes.outputs.deps_changed }}"
            export BUILD_NEEDED="${{ steps.changes.outputs.build_needed }}"
            export COMMIT_SHA="${{ github.sha }}"
            export COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
            
            # Run the smart deploy script
            cd /var/www/ravetracker-v3
            ./smart-deploy.sh
            
      - name: 🎉 Deployment completed
        run: |
          echo "✅ Deployment completed successfully!"
          echo "📝 Changes deployed:"
          echo "${{ steps.changes.outputs.changed_files }}"
