name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run type checking
      run: npm run check
      
    - name: Run tests
      run: npm run test --if-present
      
    - name: Build application
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: build/
        retention-days: 7

  deploy-temp:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to temp_build
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT || 22 }}
        timeout: 120s
        command_timeout: 60s
        script: |
          echo "🔄 Starting temp_build deployment..."
          cd /var/www/ravetracker-v3
          
          # Check if auto-update script exists
          if [ -f "auto-update-temp-build.sh" ]; then
            echo "📋 Using auto-update script..."
            chmod +x auto-update-temp-build.sh
            ./auto-update-temp-build.sh
            echo "✅ temp_build updated via auto-update script"
          else
            echo "📁 Manual temp_build update..."
            
            # Initialize temp_build if not exists
            if [ ! -d "temp_build" ]; then
              echo "🔧 Initializing temp_build directory..."
              git clone https://github.com/ochtii/ravetracker-v3.git temp_build
            fi
            
            # Update temp_build
            cd temp_build
            echo "📥 Fetching latest changes..."
            git fetch origin main
            git reset --hard origin/main
            git clean -fd
            echo "✅ temp_build updated to latest main"
            
            # Copy deployment scripts
            cd ..
            echo "📋 Updating deployment scripts..."
            cp temp_build/scripts/*.sh ./ 2>/dev/null || echo "No scripts to copy"
            chmod +x *.sh 2>/dev/null || echo "No shell scripts found"
            echo "✅ Deployment complete"
          fi
          
          echo "🎉 temp_build deployment finished successfully!"
