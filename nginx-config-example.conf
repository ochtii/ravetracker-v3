# Nginx Configuration Example für RaveTracker v3.0
# Diese Datei dient als Template - kopiere sie und passe für deinen Server an
# 
# Verwendung:
# 1. Kopiere diese Datei: cp nginx-config-example.conf nginx-config-production.conf
# 2. Passe Server-spezifische Werte an (Domain, Pfade, etc.)
# 3. nginx-config-production.conf wird automatisch von .gitignore ignoriert

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    
    # ANPASSEN: Deine Domain oder _ für alle
    server_name your-domain.com www.your-domain.com;
    
    # Für HTTP-only (ohne SSL):
    # server_name _;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/javascript
        application/json
        application/javascript
        image/svg+xml;
    
    # ANPASSEN: Pfad zu deiner App (standardmäßig OK)
    root /var/www/ravetracker-v3/current/build/client;
    index index.html;
    
    # Static files caching
    location /_app/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    location /favicon.ico {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    # API endpoints → Node.js App
    location /api/ {
        # ANPASSEN: Falls Node.js auf anderem Port läuft
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # SvelteKit App (alle anderen Routen)
    location / {
        try_files $uri $uri/ @proxy;
    }
    
    location @proxy {
        # ANPASSEN: Falls Node.js auf anderem Port läuft
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # File upload limit - ANPASSEN falls nötig
    client_max_body_size 50M;
    
    # Error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/html;
    }
}

# SSL Configuration (wird von Certbot automatisch hinzugefügt)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com www.your-domain.com;
#     
#     ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
#     
#     # Gleiche Konfiguration wie oben, aber für HTTPS
# }

# Redirect HTTP to HTTPS (nach SSL Setup)
# server {
#     listen 80;
#     server_name your-domain.com www.your-domain.com;
#     return 301 https://$server_name$request_uri;
# }
